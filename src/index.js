/**
 * Fabulator API
 * Endpoint Fabulator project
 *
 * OpenAPI spec version: 1.0.0
 * Contact: torloneg@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Json', 'model/Model1', 'model/Model10', 'model/Model11', 'model/Model12', 'model/Model13', 'model/Model14', 'model/Model15', 'model/Model2', 'model/Model3', 'model/Model4', 'model/Model5', 'model/Model6', 'model/Model7', 'model/Model8', 'model/Model9', 'model/Order', 'api/DomainApi', 'api/ExampleApi', 'api/ExecuteApi', 'api/ParserApi', 'api/RuleApi', 'api/SchemaApi', 'api/SentenceApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Json'), require('./model/Model1'), require('./model/Model10'), require('./model/Model11'), require('./model/Model12'), require('./model/Model13'), require('./model/Model14'), require('./model/Model15'), require('./model/Model2'), require('./model/Model3'), require('./model/Model4'), require('./model/Model5'), require('./model/Model6'), require('./model/Model7'), require('./model/Model8'), require('./model/Model9'), require('./model/Order'), require('./api/DomainApi'), require('./api/ExampleApi'), require('./api/ExecuteApi'), require('./api/ParserApi'), require('./api/RuleApi'), require('./api/SchemaApi'), require('./api/SentenceApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, Json, Model1, Model10, Model11, Model12, Model13, Model14, Model15, Model2, Model3, Model4, Model5, Model6, Model7, Model8, Model9, Order, DomainApi, ExampleApi, ExecuteApi, ParserApi, RuleApi, SchemaApi, SentenceApi, UsersApi) {
  'use strict';

  /**
   * Endpoint_Fabulator_project.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FabulatorApi = require('index'); // See note below*.
   * var xxxSvc = new FabulatorApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FabulatorApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FabulatorApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FabulatorApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Json model constructor.
     * @property {module:model/Json}
     */
    Json: Json,
    /**
     * The Model1 model constructor.
     * @property {module:model/Model1}
     */
    Model1: Model1,
    /**
     * The Model10 model constructor.
     * @property {module:model/Model10}
     */
    Model10: Model10,
    /**
     * The Model11 model constructor.
     * @property {module:model/Model11}
     */
    Model11: Model11,
    /**
     * The Model12 model constructor.
     * @property {module:model/Model12}
     */
    Model12: Model12,
    /**
     * The Model13 model constructor.
     * @property {module:model/Model13}
     */
    Model13: Model13,
    /**
     * The Model14 model constructor.
     * @property {module:model/Model14}
     */
    Model14: Model14,
    /**
     * The Model15 model constructor.
     * @property {module:model/Model15}
     */
    Model15: Model15,
    /**
     * The Model2 model constructor.
     * @property {module:model/Model2}
     */
    Model2: Model2,
    /**
     * The Model3 model constructor.
     * @property {module:model/Model3}
     */
    Model3: Model3,
    /**
     * The Model4 model constructor.
     * @property {module:model/Model4}
     */
    Model4: Model4,
    /**
     * The Model5 model constructor.
     * @property {module:model/Model5}
     */
    Model5: Model5,
    /**
     * The Model6 model constructor.
     * @property {module:model/Model6}
     */
    Model6: Model6,
    /**
     * The Model7 model constructor.
     * @property {module:model/Model7}
     */
    Model7: Model7,
    /**
     * The Model8 model constructor.
     * @property {module:model/Model8}
     */
    Model8: Model8,
    /**
     * The Model9 model constructor.
     * @property {module:model/Model9}
     */
    Model9: Model9,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The DomainApi service constructor.
     * @property {module:api/DomainApi}
     */
    DomainApi: DomainApi,
    /**
     * The ExampleApi service constructor.
     * @property {module:api/ExampleApi}
     */
    ExampleApi: ExampleApi,
    /**
     * The ExecuteApi service constructor.
     * @property {module:api/ExecuteApi}
     */
    ExecuteApi: ExecuteApi,
    /**
     * The ParserApi service constructor.
     * @property {module:api/ParserApi}
     */
    ParserApi: ParserApi,
    /**
     * The RuleApi service constructor.
     * @property {module:api/RuleApi}
     */
    RuleApi: RuleApi,
    /**
     * The SchemaApi service constructor.
     * @property {module:api/SchemaApi}
     */
    SchemaApi: SchemaApi,
    /**
     * The SentenceApi service constructor.
     * @property {module:api/SentenceApi}
     */
    SentenceApi: SentenceApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
